# Generated by Django 4.2 on 2023-05-06 10:57

from django.conf import settings
from django.db import models, migrations, transaction

@transaction.atomic
def apply_migration(apps, schema_editor):
    from django.contrib.auth import get_user_model

    USERNAME = 'admin'
    PASSWORD = 'admin'
    EMAIL = 'admin@admin.ru'

    user = get_user_model()

    if not user.objects.filter(username=USERNAME, email=EMAIL).exists():
        admin = user.objects.create_superuser(
           username=USERNAME, password=PASSWORD, email=EMAIL
        )
        admin.save()

    type_places = apps.get_model('catalogapp', 'TypePlace')
    type_places.objects.create(
        pk=1,
        type_place='site'
    )
    type_places.objects.create(
        pk=2,
        type_place='zags'
    )
    type_places.objects.create(
        pk=3,
        type_place='present'
    )
    type_places.objects.create(
        pk=4,
        type_place='photo'
    )
    type_places.objects.create(
        pk=5,
        type_place='design'
    )
    type_places.objects.create(
        pk=6,
        type_place='org'
    )
    type_places.objects.create(
        pk=7,
        type_place='dj'
    )
    type_places.objects.create(
        pk=8,
        type_place='invit'
    )
    type_places.objects.create(
        pk=9,
        type_place='video'
    )
    type_places.objects.create(
        pk=10,
        type_place='flor'
    )
    type_places.objects.create(
        pk=11,
        type_place='style'
    )
    type_places.objects.create(
        pk=12,
        type_place='visage'
    )
    type_places.objects.create(
        pk=13,
        type_place='music'
    )
    type_places.objects.create(
        pk=14,
        type_place='anim'
    )
    type_places.objects.create(
        pk=15,
        type_place='chor'
    )
    type_places.objects.create(
        pk=16,
        type_place='show'
    )
    type_places.objects.create(
        pk=17,
        type_place='las'
    )
    type_places.objects.create(
        pk=18,
        type_place='bah'
    )
    type_places.objects.create(
        pk=19,
        type_place='cad'
    )
    type_places.objects.create(
        pk=20,
        type_place='weddr'
    )
    type_places.objects.create(
        pk=21,
        type_place='mensuit'
    )
    type_places.objects.create(
        pk=22,
        type_place='wedri'
    )
    type_places.objects.create(
        pk=23,
        type_place='brsmdr'
    )
    type_places.objects.create(
        pk=24,
        type_place='transp'
    )
    type_places.objects.create(
        pk=25,
        type_place='barmen'
    )
    type_places.objects.create(
        pk=26,
        type_place='firew'
    )

    locations = apps.get_model('catalogapp', 'Location')
    locations.objects.create(
        pk=1,
        location='sea'
    )
    locations.objects.create(
        pk=2,
        location='river'
    )
    locations.objects.create(
        pk=3,
        location='outc'
    )
    locations.objects.create(
        pk=4,
        location='inc'
    )
    locations.objects.create(
        pk=5,
        location='icc'
    )
    locations.objects.create(
        pk=6,
        location='forest'
    )
    locations.objects.create(
        pk=7,
        location='lake'
    )
    locations.objects.create(
        pk=8,
        location='imt'
    )

    kitchens = apps.get_model('catalogapp', 'Kitchen')
    kitchens.objects.create(
        pk=1,
        kitchen='eur'
    )
    kitchens.objects.create(
        pk=2,
        kitchen='asia'
    )
    kitchens.objects.create(
        pk=3,
        kitchen='rus'
    )
    kitchens.objects.create(
        pk=4,
        kitchen='cau'
    )
    kitchens.objects.create(
        pk=5,
        kitchen='ita'
    )
    kitchens.objects.create(
        pk=6,
        kitchen='jap'
    )
    kitchens.objects.create(
        pk=7,
        kitchen='kor'
    )
    kitchens.objects.create(
        pk=8,
        kitchen='other'
    )

    events = apps.get_model('catalogapp', 'Event')
    events.objects.create(
        pk=1,
        event='wed'
    )
    events.objects.create(
        pk=2,
        event='birth'
    )
    events.objects.create(
        pk=3,
        event='nyr'
    )
    events.objects.create(
        pk=4,
        event='buf'
    )
    events.objects.create(
        pk=5,
        event='bach'
    )
    events.objects.create(
        pk=6,
        event='bclt'
    )
    events.objects.create(
        pk=7,
        event='cmp'
    )
    events.objects.create(
        pk=8,
        event='fest'
    )
    events.objects.create(
        pk=9,
        event='grd'
    )

    features = apps.get_model('catalogapp', 'Features')
    features.objects.create(
        pk=1,
        type_feature='guestr'
    )
    features.objects.create(
        pk=2,
        type_feature='room'
    )
    features.objects.create(
        pk=3,
        type_feature='proj'
    )
    features.objects.create(
        pk=4,
        type_feature='tv'
    )
    features.objects.create(
        pk=5,
        type_feature='dance'
    )
    features.objects.create(
        pk=6,
        type_feature='scen'
    )
    features.objects.create(
        pk=7,
        type_feature='brid'
    )
    features.objects.create(
        pk=8,
        type_feature='dress'
    )
    features.objects.create(
        pk=9,
        type_feature='pan'
    )
    features.objects.create(
        pk=10,
        type_feature='phot'
    )
    territories = apps.get_model('catalogapp', 'TypeTerritory')
    territories.objects.create(
        pk=1,
        type_territory='phot'
    )
    territories.objects.create(
        pk=2,
        type_territory='welc'
    )
    territories.objects.create(
        pk=3,
        type_territory='fire'
    )
    territories.objects.create(
        pk=4,
        type_territory='firew'
    )
    territories.objects.create(
        pk=5,
        type_territory='hotel'
    )
    territories.objects.create(
        pk=6,
        type_territory='kids'
    )
    territories.objects.create(
        pk=7,
        type_territory='phot'
    )
    territories.objects.create(
        pk=8,
        type_territory='reg'
    )
    territories.objects.create(
        pk=9,
        type_territory='pan'
    )
    territories.objects.create(
        pk=10,
        type_territory='guesth'
    )

    type_areas = apps.get_model('catalogapp', 'TypeArea')
    type_areas.objects.create(
        pk=1,
        type_area='bqh'
    )
    type_areas.objects.create(
        pk=2,
        type_area='tent'
    )
    type_areas.objects.create(
        pk=3,
        type_area='vrnd'
    )
    type_areas.objects.create(
        pk=4,
        type_area='ycc'
    )
    type_areas.objects.create(
        pk=5,
        type_area='mts'
    )
    type_areas.objects.create(
        pk=6,
        type_area='loft'
    )
    type_areas.objects.create(
        pk=7,
        type_area='mnr'
    )
    type_areas.objects.create(
        pk=8,
        type_area='rsrn'
    )
    type_areas.objects.create(
        pk=9,
        type_area='cafe'
    )
    type_areas.objects.create(
        pk=10,
        type_area='rct'
    )
    type_areas.objects.create(
        pk=11,
        type_area='ctg'
    )
    type_areas.objects.create(
        pk=12,
        type_area='htl'
    )
    type_areas.objects.create(
        pk=13,
        type_area='cst'
    )
    type_areas.objects.create(
        pk=14,
        type_area='cntc'
    )
    type_areas.objects.create(
        pk=15,
        type_area='cntn'
    )
    Group = apps.get_model('auth', 'Group')
    Group.objects.bulk_create([
        Group(name=u'bride'),
        Group(name=u'vendor'),
    ])


def revert_migration(apps, schema_editor):
    type_places = apps.get_model('catalogapp', 'TypePlace')
    locations = apps.get_model('catalogapp', 'Location')
    kitchens = apps.get_model('catalogapp', 'Kitchen')
    events = apps.get_model('catalogapp', 'Event')
    features = apps.get_model('catalogapp', 'Features')
    territories = apps.get_model('catalogapp', 'Territory')
    type_areas = apps.get_model('catalogapp', 'TypeArea')
    type_places.objects.all().delete()
    locations.objects.all().delete()
    kitchens.objects.all().delete()
    events.objects.all().delete()
    features.objects.all().delete()
    territories.objects.all().delete()
    type_areas.objects.all().delete()
    Group = apps.get_model('auth', 'Group')
    Group.objects.filter(
        name__in=[
            u'bride',
            u'vendor',
        ]
    ).delete()


class Migration(migrations.Migration):
    dependencies = [
        ("authapp", "0001_initial"),
        ('catalogapp', '0001_initial')
    ]

    operations = [
        migrations.RunPython(apply_migration, revert_migration)
    ]
